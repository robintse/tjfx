/*    This file is generated and updated by Sencha Cmd. You can edit this file as    needed for your application, but these edits will have to be merged by    Sencha Cmd when it performs code generation tasks such as generating new    models, controllers or views and when running "sencha app upgrade".    Ideally changes to this file would be limited and most work would be done    in other places (such as Controllers). If Sencha Cmd cannot merge your    changes and its generated code, it will produce a "merge conflict" that you    will need to resolve manually.*/Ext.Loader.setConfig({    enabled : true,    paths   : {        Ext : '../touch/src'    }});Ext.application({    name: 'MyApp',    requires: ['Ext.MessageBox'],    models: ['ItemT','BigDataModel'],    stores: ['ItemList','BigDataStore'],    views: ['Main','Login','Reg','Home','Chart','HomePanel','TouchTreeGrid','bigDataList'],    controllers: ['List','CommonController'],    icon: {        '57': 'resources/icons/Icon.png',        '72': 'resources/icons/Icon~ipad.png',        '114': 'resources/icons/Icon@2x.png',        '144': 'resources/icons/Icon~ipad@2x.png'    },    isIconPrecomposed: true,    startupImage: {        '320x460': 'resources/startup/320x460.jpg',        '640x920': 'resources/startup/640x920.png',        '768x1004': 'resources/startup/768x1004.png',        '748x1024': 'resources/startup/748x1024.png',        '1536x2008': 'resources/startup/1536x2008.png',        '1496x2048': 'resources/startup/1496x2048.png'    },    //    setDragInteraction: function(component) {//        var dragObj = {//            direction: 'horizontal',//            constraint: {//                min: {x: 0, y: 0},//                // allows us to drag the entire width of the view//                max: {x: window.innerWidth, y: 0}//            },//            listeners: {//                dragend: function(draggable) {//                    // if the user has dragged more than half the width of the //                    // screen, set the offset to width of the screen and hide the view.//                    if(draggable.offset.x > window.innerWidth / 2) {////                        Ext.ComponentQuery.query('#backButton')[0].hide();//                        Ext.ComponentQuery.query('#toolbar')[0].setTitle('用户登录');//////                        // setOffset takes X, Y, and an animation object//                        draggable.setOffset(window.innerWidth, 0, {//                            type: 'slide',//                            duration: 200//                        });////                        // using setTimeout here to allow the animation to finish,//                        // then hide the component and set setOffset back to 0//                        setTimeout(function() {//                            component.setHidden(true);//                            draggable.setOffset(0,0);//                        }, 300);//                    }////                    // User didn't drag far enough so snap back.//                    else {////                        draggable.setOffset(0, 0, {//                            type: 'slide',//                            duration: 200//                        });//                    }//                },//                // Extra credit: set the size of the shadow to decrease when the user//                // drags closer to the right.//                drag: function(drag) {////                    //console.log(shadowWidth);//                    //component.setStyle('box-shadow: -10px 0px 50px #666;');//                }//            }//        };////        //console.log(component.getWidth());//        component.setDraggable(dragObj);//    },    launch: function() {        // Destroy the #appLoadingIndicator element        Ext.fly('appLoadingIndicator').destroy();        // Initialize the main view        Ext.Viewport.add(Ext.create('MyApp.view.Main'));    },    onUpdated: function() {        Ext.Msg.confirm(            "Application Update",            "This application has just successfully been updated to the latest version. Reload now?",            function(buttonId) {                if (buttonId === 'yes') {                    window.location.reload();                }            }        );    }});